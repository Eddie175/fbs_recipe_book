/* ==========================================================================
   Filter Component
   ========================================================================== */

/* Container Layout
   ========================================================================== */
.filter-container {
    position: relative;
    z-index: 5;
    padding: 0 16px;
    margin-bottom: 24px;
}

/* Filter Button Base
   ========================================================================== */
.filter-btn {
    /* Layout */
    display: flex;
    align-items: center;
    justify-content: flex-start;
    height: 44px;
    min-width: 140px;
    padding: 10px 16px 10px 42px;
    position: relative;

    /* Visual */
    background: linear-gradient(180deg, var(--surface-color) 0%, var(--surface-color-dark) 100%);
    border: 1px solid rgba(var(--border-rgb), 0.12);
    border-radius: 12px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);

    /* Typography */
    color: var(--text-primary);
    font-size: 0.95rem;
    font-weight: 500;

    /* Interaction */
    cursor: pointer;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Button Content Layout
   ========================================================================== */
.filter-btn > span {
    display: flex;
    align-items: center;
}

.filter-btn > span:first-child {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1.2rem;
    margin-right: 10px;
}

.filter-btn > span:nth-child(2) {
    text-align: center;
    flex-grow: 1;
    margin: 0 40px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Category Emojis
   ========================================================================== */
.filter-btn::before {
    content: attr(data-emoji);
    position: absolute;
    left: 14px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1.2rem;
    opacity: 0.9;
}

/* Category-specific emoji definitions */
.filter-btn[data-category="main"]::before { content: "üç≤"; }
.filter-btn[data-category="dessert"]::before { content: "üç∞"; }
.filter-btn[data-category="side"]::before { content: "ü•ó"; }
.filter-btn[data-category="breakfast"]::before { content: "üç≥"; }
.filter-btn[data-category="soup"]::before { content: "üçú"; }
.filter-btn[data-category="drink"]::before { content: "üçπ"; }

/* Count Badge
   ========================================================================== */
.filter-btn .count {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    min-width: 24px;
    padding: 3px 8px;
    
    background: linear-gradient(180deg, var(--badge-bg) 0%, var(--badge-bg-dark) 100%);
    border-radius: 10px;
    box-shadow: inset 0 0 0 1px rgba(var(--border-rgb), 0.1),
                0 1px 2px rgba(0, 0, 0, 0.05);
    
    color: var(--text-primary);
    font-size: 0.8rem;
    font-weight: 600;
    text-align: center;
}

/* Hover Effects
   ========================================================================== */
.filter-btn::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(to bottom, rgba(255,255,255,0.1), rgba(255,255,255,0));
    opacity: 0;
    transition: opacity 0.2s;
}

.filter-btn:hover::after {
    opacity: 1;
}

/* Active State
   ========================================================================== */
.filter-btn.active {
    background: linear-gradient(180deg, var(--primary-light) 0%, var(--primary) 100%);
    color: white;
    border-color: var(--primary);
    box-shadow: 0 4px 12px rgba(var(--primary-rgb), 0.25),
                inset 0 1px 0 rgba(255, 255, 255, 0.2);
    transform: translateY(-1px);
}

.filter-btn.active .count {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.3);
}

/* Dark Theme Overrides
   ========================================================================== */
[data-theme="dark"] .filter-btn {
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0.05) 100%);
    border-color: rgba(255, 255, 255, 0.15);
    color: var(--white);
}

[data-theme="dark"] .filter-btn .count {
    background-color: rgba(255, 255, 255, 0.2);
}

[data-theme="dark"] .filter-btn.active {
    background: linear-gradient(180deg, var(--primary) 0%, var(--primary-dark) 100%);
    border-color: var(--primary-light);
    box-shadow: var(--shadow-md), 0 0 8px var(--primary-light);
}

[data-theme="dark"] .filter-btn:hover {
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.12) 0%, rgba(255, 255, 255, 0.08) 100%);
    border-color: rgba(255, 255, 255, 0.2);
}

/* Responsive Layouts
   ========================================================================== */
@media (min-width: 769px) {
    .filter-container {
        display: flex;
        justify-content: center;
        gap: 12px;
        flex-wrap: wrap;
        margin-bottom: 32px;
        padding: 0 24px;
    }
}

@media (hover: hover) {
    .filter-btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08),
                    inset 0 1px 0 rgba(255, 255, 255, 0.2);
        border-color: rgba(var(--primary-rgb), 0.3);
    }
}

@media (max-width: 768px) {
    .mobile-filter-options {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 12px;
        padding: 16px;
    }

    .mobile-filter-btn-item[data-category="all"] {
        grid-column: 1 / -1;
    }

    .mobile-filter-btn-item {
        width: 100%;
        padding: 12px 16px;
    }

    .mobile-count {
        position: absolute;
        top: 12px;
        right: 12px;
    }
}

